buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
}

group 'com.subha.vertx'
version '1.0-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'application'

ext {
    vertx = "3.3.3"
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.14'
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    compile "io.vertx:vertx-core:$vertx"
    compile "io.vertx:vertx-web:$vertx"
    compile "io.vertx:vertx-rx-groovy:$vertx"
    compile "io.vertx:vertx-rx-java:$vertx"
    compile "io.vertx:vertx-jdbc-client:$vertx"
    compile "io.vertx:vertx-service-discovery:$vertx"
    compile "io.vertx:vertx-circuit-breaker:$vertx"


    compile 'org.hsqldb:hsqldb:2.3.3'
    compile 'com.couchbase.client:java-client:2.1.6'


    compile 'com.google.inject:guice:4.1.0'

    compile 'com.github.davidmoten:rxjava-jdbc:0.7.3'


    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'ch.qos.logback:logback-classic:1.1.7'

    compile 'io.javaslang:javaslang:2.0.5'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.8.6'
    compile 'org.codehaus.woodstox:woodstox-core-asl:4.4.1'
    compile 'com.google.protobuf:protobuf-java:3.1.0'




    compile project(':vertx-guice')

    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile "org.hamcrest:hamcrest-core:1.3"
    testRuntime "cglib:cglib-nodep:3.1"
    testRuntime "org.objenesis:objenesis:2.1"



}

/**
 * Main Class without Guice DI
 */
//mainClassName = "com.subha.vertx.VertxMain"


/**
 * Main Class with Guice DI
 */
mainClassName = "com.subha.vertx.VertxGuiceMain"

run {
    args = ['run', "java-guice:com.subha.vertx.verticles.MasterVerticle"]
}


task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}


test{
    testLogging{

        //showStandardStreams = true
        exceptionFormat = 'full'
        // Or set property events:
        events 'standard_out', 'standard_error'

        // events = ['standard_out', 'standard_error']
         //events = ['standard_out', 'standard_error']

        // Instead of string values we can
        // use enum values:

        // events org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_OUT,
        //  org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_ERROR,
    }
}
